// 'BATTERY_H', 320x14px
const unsigned char epd_bitmap_BATTERY_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xe3, 0xff, 0x7f, 0xdf, 0xf7, 0xfe, 0x7f, 0xee, 0x38, 0x1c, 0x39, 0xff, 0xb8, 0x03, 0xfc, 
	0xff, 0xdf, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe3, 0xff, 0x7f, 0xdf, 0xf7, 0xfe, 0x7f, 
	0xee, 0x38, 0x1c, 0x39, 0xff, 0xb8, 0x03, 0xfc, 0xff, 0xdf, 0xf3, 0xff, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xe3, 0xff, 0x3f, 0xcf, 0xf7, 0xfe, 0x7f, 0xee, 0x38, 0x1c, 0x39, 0xff, 0xb8, 0x03, 0xfc, 
	0xff, 0xdf, 0xe3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xe3, 0x87, 0x0e, 0x03, 0x87, 0x06, 0x70, 
	0xee, 0x38, 0x1c, 0x79, 0xc3, 0xb8, 0x00, 0xe0, 0xc1, 0xdc, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xe3, 0xff, 0x0e, 0x03, 0x87, 0xfe, 0x7f, 0xef, 0xf8, 0x1c, 0xf1, 0xc3, 0xb8, 0x00, 0xe0, 
	0xff, 0xdd, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe3, 0xff, 0x0e, 0x03, 0x87, 0xfe, 0x7f, 
	0xef, 0xf8, 0x1d, 0xf1, 0xc3, 0xb8, 0x00, 0xe0, 0xff, 0xdd, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x18, 0x3b, 0xff, 0x0e, 0x03, 0x87, 0xfe, 0x7f, 0x81, 0xc0, 0x1f, 0xc1, 0xc3, 0xb8, 0x00, 0xe0, 
	0xff, 0xdc, 0x3b, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfb, 0x87, 0x0e, 0x03, 0x87, 0x0e, 0x70, 
	0xe1, 0xc0, 0x1f, 0x81, 0xff, 0xbf, 0xf0, 0xe0, 0xe1, 0xdf, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0xfb, 0x87, 0x0e, 0x03, 0x87, 0x06, 0x70, 0xe1, 0xc0, 0x1f, 0x01, 0xff, 0xbf, 0xf0, 0xe0, 
	0xc1, 0xdf, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfb, 0x87, 0x0e, 0x03, 0x87, 0x06, 0x70, 
	0xe1, 0xc0, 0x1f, 0x01, 0xff, 0xbf, 0xf0, 0xe0, 0xc1, 0xdf, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'COOLANTTEMP_H', 320x14px
const unsigned char epd_bitmap_COOLANTTEMP_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7f, 0xee, 0x1d, 0xff, 0x1c, 0x03, 0xf7, 0x06, 0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcc, 0x01, 
	0xff, 0xb8, 0x33, 0xfc, 0x07, 0xf9, 0xff, 0xb8, 0x73, 0xff, 0x03, 0xe7, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xee, 0x1d, 0xff, 0x1c, 0x03, 0xf7, 0x86, 
	0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcc, 0x01, 0xff, 0xbc, 0x33, 0xfc, 0x07, 0xf9, 0xff, 0xbc, 
	0xf3, 0xff, 0x03, 0xe7, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7f, 0xcf, 0x1d, 0xff, 0x1c, 0x03, 0xf7, 0xc6, 0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcc, 0x01, 
	0xff, 0xbe, 0x33, 0xfc, 0x07, 0xf9, 0xff, 0xbe, 0xf3, 0xff, 0x02, 0x67, 0x9c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0f, 0xdd, 0xc0, 0x1c, 0x00, 0xe7, 0xe6, 
	0x70, 0x00, 0x70, 0x07, 0x0e, 0xe1, 0xcc, 0x01, 0xc3, 0xbf, 0x30, 0x70, 0x00, 0xe1, 0xc0, 0x3f, 
	0xf3, 0x87, 0x03, 0x67, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7f, 0x0f, 0xfd, 0xcf, 0x9c, 0x00, 0xe7, 0xfe, 0x7f, 0x00, 0x70, 0x07, 0x0e, 0xe1, 0xcc, 0x01, 
	0xff, 0xbf, 0xf0, 0x70, 0x00, 0xe1, 0xfc, 0x3f, 0xf3, 0xff, 0x03, 0xe7, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x0f, 0xfd, 0xcf, 0x9c, 0x00, 0xe7, 0xfe, 
	0x7f, 0x00, 0x70, 0x07, 0x0e, 0xe1, 0xcc, 0x01, 0xff, 0xbf, 0xf0, 0x70, 0x00, 0xe1, 0xfc, 0x3f, 
	0xf3, 0xff, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x60, 0x0e, 0xfd, 0xc1, 0x9c, 0x00, 0xe7, 0x3e, 0x70, 0x00, 0x70, 0x07, 0x0e, 0xe1, 0xcc, 0x01, 
	0xff, 0xb9, 0xf0, 0x70, 0x00, 0xe1, 0xc0, 0x39, 0x73, 0xff, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xce, 0x3d, 0xff, 0x9f, 0xfb, 0xf7, 0x1e, 
	0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcf, 0xf9, 0xc3, 0xb8, 0xf0, 0x70, 0x00, 0xe1, 0xff, 0xb8, 
	0x73, 0x80, 0x00, 0x07, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x7f, 0xee, 0x1d, 0xff, 0x9f, 0xfb, 0xf7, 0x0e, 0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcf, 0xfd, 
	0xc3, 0xb8, 0x70, 0x70, 0x00, 0xe1, 0xff, 0xb8, 0x73, 0x80, 0x00, 0x07, 0x9c, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xee, 0x1d, 0xff, 0x9f, 0xfb, 0xf7, 0x06, 
	0x7f, 0xe0, 0x7f, 0xe7, 0xfe, 0xff, 0xcf, 0xfd, 0xc3, 0xb8, 0x30, 0x70, 0x00, 0xe1, 0xff, 0xb8, 
	0x73, 0x80, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'ENGINELOAD-H', 320x14px
const unsigned char epd_bitmap_ENGINELOAD_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0x0f, 0x7f, 0xcf, 0xdc, 0x3d, 0xff, 0x81, 0xc0, 0x1f, 0xfb, 0xff, 0x7e, 0x00, 0x78, 
	0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0xcf, 0x7f, 0xcf, 0xdf, 0x3d, 0xff, 
	0x81, 0xc0, 0x1f, 0xfb, 0xff, 0x7f, 0x80, 0x78, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0xcf, 0x7f, 0x8f, 0xdf, 0x3d, 0xff, 0x81, 0xc0, 0x1f, 0xfb, 0xff, 0x7f, 0x80, 0x78, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xef, 0x70, 0x03, 0x9f, 0xbd, 0xc0, 
	0x01, 0xc0, 0x1c, 0x3b, 0x87, 0x7b, 0xc0, 0x79, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x87, 0xff, 0x77, 0xe3, 0x9f, 0xfd, 0xfc, 0x01, 0xc0, 0x1c, 0x3b, 0xff, 0x79, 0xf0, 0x7b, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x87, 0xff, 0x77, 0xe3, 0x9f, 0xfd, 0xfc, 
	0x01, 0xc0, 0x1c, 0x3b, 0xff, 0x79, 0xf0, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x07, 0x3f, 0x70, 0xe3, 0x9c, 0xfd, 0xc0, 0x01, 0xc0, 0x1c, 0x3b, 0xff, 0x78, 0xf0, 0x07, 
	0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x1f, 0x7f, 0xef, 0xdc, 0x7d, 0xff, 
	0x81, 0xff, 0x9f, 0xfb, 0x87, 0x7f, 0xf0, 0x1e, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0x1f, 0x7f, 0xef, 0xdc, 0x7d, 0xff, 0x81, 0xff, 0x9f, 0xfb, 0x87, 0x7f, 0xf0, 0x1e, 
	0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x0f, 0x7f, 0xef, 0xdc, 0x3d, 0xff, 
	0x81, 0xff, 0x9f, 0xfb, 0x87, 0x7f, 0xf0, 0x78, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 
	0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'ENGINERPM-H', 320x14px
const unsigned char epd_bitmap_ENGINERPM_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0x0f, 0x7f, 0xcf, 0xdc, 0x3d, 0xff, 0x81, 0xff, 0x9f, 0xfb, 0x87, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0xcf, 0x7f, 0xcf, 0xdf, 0x3d, 0xff, 
	0x81, 0xff, 0x9f, 0xfb, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0xcf, 0x7f, 0x8f, 0xdf, 0x3d, 0xff, 0x81, 0xff, 0x9f, 0xfb, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xef, 0x70, 0x03, 0x9f, 0xbd, 0xc0, 
	0x01, 0xc3, 0x9c, 0x3b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x87, 0xff, 0x77, 0xe3, 0x9f, 0xfd, 0xfc, 0x01, 0xff, 0x9f, 0xfb, 0xff, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x87, 0xff, 0x77, 0xe3, 0x9f, 0xfd, 0xfc, 
	0x01, 0xff, 0x9f, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x07, 0x3f, 0x70, 0xe3, 0x9c, 0xfd, 0xc0, 0x01, 0xff, 0x1f, 0xfb, 0xb7, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x1f, 0x7f, 0xef, 0xdc, 0x7d, 0xff, 
	0x81, 0xe3, 0x9c, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0x1f, 0x7f, 0xef, 0xdc, 0x7d, 0xff, 0x81, 0xc3, 0x9c, 0x03, 0x87, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x0f, 0x7f, 0xef, 0xdc, 0x3d, 0xff, 
	0x81, 0xc3, 0x9c, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'FUEL_RAIL_PRESSURE-H', 320x14px
const unsigned char epd_bitmap_FUEL_RAIL_PRESSURE_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0x0e, 0xff, 0xce, 0x00, 0x0f, 0xfc, 0xff, 0xdf, 0xb8, 0x00, 0x1f, 0xfb, 0xff, 0x3f, 
	0xf7, 0xfe, 0xff, 0xce, 0x1d, 0xff, 0x9f, 0xf8, 0x1c, 0x03, 0xfe, 0x7f, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x0e, 0xff, 0xce, 0x00, 0x0f, 0xfc, 
	0xff, 0xdf, 0xb8, 0x00, 0x1f, 0xfb, 0xff, 0x3f, 0xf7, 0xfe, 0xff, 0xce, 0x1d, 0xff, 0x9f, 0xf8, 
	0x1c, 0x03, 0xfe, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xe7, 0x0e, 0xff, 0xce, 0x00, 0x0f, 0xfc, 0xff, 0xdf, 0xb8, 0x00, 0x1f, 0xfb, 0xff, 0x3f, 
	0xe7, 0xfe, 0xff, 0xce, 0x1d, 0xff, 0x9f, 0xf0, 0x1c, 0xf3, 0xde, 0x79, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0x0e, 0xe0, 0x0e, 0x00, 0x0e, 0x1c, 
	0xe1, 0xc6, 0x38, 0x00, 0x1c, 0x3b, 0x87, 0x30, 0x07, 0x00, 0xe0, 0x0e, 0x1d, 0xc3, 0x9c, 0x00, 
	0x1e, 0xe3, 0xde, 0x79, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x87, 0x0e, 0xfe, 0x0e, 0x00, 0x0f, 0xfc, 0xff, 0xc6, 0x38, 0x00, 0x1f, 0xfb, 0xff, 0x3f, 
	0x07, 0xfe, 0xff, 0xce, 0x1d, 0xff, 0x9f, 0xc0, 0x1f, 0xc3, 0xde, 0x79, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x87, 0x0e, 0xfe, 0x0e, 0x00, 0x0f, 0xfc, 
	0xff, 0xc6, 0x38, 0x00, 0x1f, 0xfb, 0xff, 0x3f, 0x07, 0xfe, 0x7f, 0xce, 0x1d, 0xff, 0x9f, 0xc0, 
	0x1e, 0xe3, 0xde, 0x7b, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x87, 0x0e, 0xe0, 0x0e, 0x00, 0x0f, 0xf8, 0xff, 0xc6, 0x38, 0x00, 0x1f, 0xfb, 0xfe, 0x30, 
	0x00, 0x0e, 0x00, 0xce, 0x1d, 0xff, 0x1c, 0x00, 0x1c, 0xf3, 0xfe, 0x7f, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xfe, 0xff, 0xcf, 0xfc, 0x0e, 0x1c, 
	0xe1, 0xdf, 0xbf, 0xf0, 0x1c, 0x03, 0x87, 0x3f, 0xe7, 0xfe, 0x7f, 0xcf, 0xfd, 0xc3, 0x9f, 0xf0, 
	0x1c, 0xf3, 0xc0, 0x79, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x30, 0x07, 0xfe, 0xff, 0xcf, 0xfc, 0x0e, 0x1c, 0xe1, 0xdf, 0xbf, 0xf0, 0x1c, 0x03, 0x87, 0x3f, 
	0xf7, 0xfe, 0xff, 0xcf, 0xfd, 0xc3, 0x9f, 0xf8, 0x1c, 0xf3, 0xc0, 0x79, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0xfe, 0xff, 0xcf, 0xfc, 0x0e, 0x1c, 
	0xe1, 0xdf, 0xbf, 0xf0, 0x1c, 0x03, 0x87, 0x3f, 0xf7, 0xfe, 0xff, 0xcf, 0xfd, 0xc3, 0x9f, 0xf8, 
	0x1c, 0xf3, 0xc0, 0x79, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xf3, 0xc0, 0x79, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'INTAKE_H', 320x14px
const unsigned char epd_bitmap_INTAKE_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x70, 0xef, 0xfb, 0xff, 0xb8, 0xef, 0xfc, 0x0f, 0xfb, 0xff, 0xb8, 0x77, 0xfe, 0x0f, 0xdf, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x78, 0xef, 0xfb, 0xff, 0xbb, 0xef, 0xfc, 
	0x0f, 0xfb, 0xff, 0xbc, 0xf7, 0xfe, 0x0f, 0xdf, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x7c, 0xef, 0xfb, 0xff, 0xbb, 0xef, 0xfc, 0x0f, 0xfb, 0xff, 0x3f, 0xf7, 0xfe, 0x0c, 0xde, 
	0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x7e, 0xe1, 0xc3, 0xc3, 0xbf, 0x8e, 0x00, 
	0x01, 0xc3, 0x80, 0x3f, 0xf7, 0x0e, 0x0f, 0xde, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1c, 0x7f, 0xe1, 0xc3, 0xff, 0xbf, 0x0f, 0xe0, 0x01, 0xc3, 0xfc, 0x3f, 0xf7, 0xfe, 0x0f, 0xde, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x7f, 0xe1, 0xc3, 0xff, 0xbf, 0x0f, 0xe0, 
	0x01, 0xc3, 0xfc, 0x3f, 0xf7, 0xfe, 0x0f, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1c, 0x77, 0xe1, 0xc3, 0xff, 0xbf, 0x8e, 0x00, 0x01, 0xc3, 0x80, 0x3b, 0x77, 0xfe, 0x00, 0x1e, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x73, 0xe1, 0xc3, 0xc7, 0xbb, 0xef, 0xfc, 
	0x01, 0xc3, 0xff, 0x38, 0x77, 0x80, 0x00, 0x1e, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x71, 0xe1, 0xc3, 0xc3, 0xbb, 0xef, 0xfc, 0x01, 0xc3, 0xff, 0xb8, 0x77, 0x00, 0x00, 0x1e, 
	0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x70, 0xe1, 0xc3, 0xc3, 0xb8, 0xef, 0xfc, 
	0x01, 0xc3, 0xff, 0xb8, 0x77, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'INTAKEPRES-H', 320x14px
const unsigned char epd_bitmap_INTAKEPRES_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xc0, 0x3f, 0xe7, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0x38, 0x77, 0xfd, 0xff, 0x98, 0xe7, 0xfe, 0x07, 0x0e, 0xff, 0xce, 0x1d, 0xfb, 0xff, 0x3f, 
	0xf7, 0x00, 0x7c, 0x00, 0x7f, 0xe7, 0xfe, 0xff, 0xdf, 0xf9, 0xff, 0x81, 0xc0, 0x3f, 0xe7, 0xfc, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x38, 0x77, 0xfd, 0xff, 0x98, 0xe7, 0xfe, 
	0x07, 0x0e, 0xff, 0xce, 0x1d, 0xfb, 0xff, 0x3f, 0xf7, 0x00, 0x7e, 0x00, 0x7f, 0xe7, 0xfe, 0xff, 
	0xdf, 0xf9, 0xff, 0x81, 0xcf, 0x3d, 0xe7, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0x3c, 0x77, 0xfd, 0xff, 0x9d, 0xe7, 0xfc, 0x07, 0x9e, 0xff, 0xcf, 0x1d, 0xfb, 0xff, 0x3f, 
	0xf7, 0x00, 0x7f, 0x00, 0x7f, 0xe7, 0xfe, 0xff, 0xdf, 0xf9, 0xff, 0x81, 0xee, 0x3d, 0xe7, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x3e, 0x70, 0xe1, 0xc3, 0x9f, 0xc6, 0x00, 
	0x07, 0xfe, 0xe0, 0xcf, 0xdc, 0x73, 0x80, 0x38, 0x77, 0x00, 0x77, 0x80, 0x70, 0xe6, 0x0e, 0xe0, 
	0x1c, 0x01, 0xc0, 0x01, 0xfc, 0x3d, 0xe7, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x3f, 0xf0, 0xe1, 0xff, 0x9f, 0x07, 0xf0, 0x07, 0xfe, 0xff, 0xcf, 0xfc, 0x73, 0xf8, 0x38, 
	0x77, 0x00, 0x73, 0xc0, 0x7f, 0xe7, 0xfe, 0xfe, 0x1f, 0xf9, 0xff, 0x81, 0xee, 0x3d, 0xe7, 0xbc, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x3f, 0xf0, 0xe1, 0xff, 0x9f, 0x07, 0xf0, 
	0x07, 0xfe, 0xff, 0xcf, 0xfc, 0x73, 0xfc, 0x38, 0x77, 0x00, 0x71, 0xe0, 0x7f, 0xe7, 0xfc, 0xfe, 
	0x0f, 0xf9, 0xff, 0x81, 0xcf, 0x3f, 0xe7, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x3b, 0xf0, 0xe1, 0xff, 0x9f, 0xc6, 0x00, 0x07, 0x6e, 0xff, 0xce, 0xfc, 0x73, 0xfc, 0x38, 
	0x77, 0x00, 0x70, 0xe0, 0x7f, 0xe7, 0xf8, 0xe0, 0x00, 0x18, 0x03, 0x81, 0xcf, 0x3c, 0x07, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x39, 0xf0, 0xe1, 0xc3, 0x9d, 0xe7, 0xfc, 
	0x07, 0x0e, 0xe1, 0xce, 0x7d, 0xfb, 0x80, 0x3f, 0xf7, 0xfe, 0x7f, 0xe0, 0x70, 0x07, 0x0c, 0xff, 
	0xcf, 0xf9, 0xff, 0x81, 0xcf, 0x3c, 0x07, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1f, 0x38, 0xf0, 0xe1, 0xc3, 0x98, 0xe7, 0xfe, 0x07, 0x0e, 0xe0, 0xce, 0x3d, 0xfb, 0x80, 0x3f, 
	0xf7, 0xfe, 0x7f, 0xe0, 0x70, 0x06, 0x0e, 0xff, 0xdf, 0xf9, 0xff, 0x81, 0xcf, 0x3c, 0x07, 0x9c, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x38, 0x70, 0xe1, 0xc3, 0x98, 0xe7, 0xfe, 
	0x07, 0x0e, 0xe0, 0xce, 0x1d, 0xfb, 0x80, 0x3f, 0xf7, 0xfe, 0x7f, 0xe0, 0x70, 0x06, 0x0e, 0xff, 
	0xdf, 0xf9, 0xff, 0x81, 0xcf, 0x3c, 0x07, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'MAF', 320x14px
const unsigned char epd_bitmap_MAF [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x77, 0xff, 0x7f, 0xe0, 0x7f, 0xe7, 0xef, 0xfc, 0x0f, 0xfc, 0xe0, 0x1f, 0xfb, 0xc7, 0x81, 
	0xff, 0xbf, 0xfb, 0xfe, 0xff, 0xc1, 0xff, 0x00, 0x7b, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xf7, 0xff, 0x7f, 0xe0, 0x7f, 0xe7, 0xef, 
	0xfc, 0x0f, 0xfc, 0xe0, 0x1f, 0xfb, 0xc7, 0x81, 0xff, 0xbf, 0xfb, 0xfe, 0xff, 0xc1, 0xff, 0x00, 
	0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0xff, 0x7f, 0xe0, 0x7f, 0xe7, 0xcf, 0xfc, 0x0f, 0xfc, 0xe0, 0x1f, 0xfb, 0xc3, 0x81, 
	0xff, 0xbf, 0xfb, 0xfc, 0xff, 0xc1, 0xff, 0x00, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0x0f, 0x70, 0x00, 0x70, 0xe3, 0x8e, 
	0x1c, 0x0e, 0x00, 0xe0, 0x1c, 0x3b, 0xd7, 0x81, 0xc3, 0xb8, 0x78, 0xf0, 0xe0, 0x01, 0xc0, 0x01, 
	0xe3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xf7, 0xff, 0x7f, 0x00, 0x7f, 0xe3, 0x8f, 0xfc, 0x0f, 0xe0, 0xe0, 0x1c, 0x3b, 0xff, 0x81, 
	0xff, 0xbf, 0xf8, 0xf0, 0xfe, 0x01, 0xdf, 0x87, 0xc3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf7, 0xff, 0x7f, 0x00, 0x7f, 0xe3, 0x8f, 
	0xfc, 0x0f, 0xf0, 0xe0, 0x1c, 0x3b, 0xff, 0x81, 0xff, 0xbf, 0xf8, 0xf0, 0xfe, 0x01, 0xdf, 0x87, 
	0xc3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3b, 0x77, 0xff, 0x7f, 0x00, 0x7f, 0xe3, 0x8f, 0xf8, 0x0f, 0xf0, 0xe0, 0x1c, 0x3b, 0xff, 0x81, 
	0xff, 0x3f, 0xf8, 0xf0, 0xe0, 0x01, 0xc3, 0x8f, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x77, 0x8f, 0x70, 0x00, 0x78, 0xe7, 0xce, 
	0x1c, 0x0f, 0x00, 0xff, 0xdf, 0xfb, 0xef, 0x81, 0xc3, 0xbc, 0x78, 0xf0, 0xff, 0xc1, 0xff, 0xbe, 
	0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x77, 0x0f, 0x70, 0x00, 0x70, 0xe7, 0xee, 0x1c, 0x0e, 0x00, 0xff, 0xdf, 0xfb, 0xef, 0x81, 
	0xc3, 0xb8, 0x78, 0xf0, 0xff, 0xc1, 0xff, 0xbe, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x77, 0x0f, 0x70, 0x00, 0x70, 0xe7, 0xee, 
	0x1c, 0x0e, 0x00, 0xff, 0xdf, 0xfb, 0xc7, 0x81, 0xc3, 0xb8, 0x78, 0xf0, 0xff, 0xc1, 0xff, 0xb8, 
	0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'VEHICLESPEED-H', 320x14px
const unsigned char epd_bitmap_VEHICLESPEED_H [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x77, 0xff, 0x70, 0xef, 0xdf, 0xfd, 0xc0, 0x3f, 0xf0, 0x1f, 0xfb, 0xff, 0x7f, 0xf7, 0xfe, 
	0xfc, 0x00, 0xf7, 0xde, 0x0f, 0x80, 0x1f, 0x79, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x77, 0xff, 0x70, 0xef, 0xdf, 0xfd, 0xc0, 
	0x3f, 0xf0, 0x1f, 0xfb, 0xff, 0x7f, 0xf7, 0xfe, 0xfe, 0x00, 0xf7, 0xde, 0x0f, 0x80, 0x1e, 0x79, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x38, 0x77, 0xff, 0x70, 0xef, 0xdf, 0xf9, 0xc0, 0x3f, 0xf0, 0x1f, 0xfb, 0xff, 0x7f, 0xf7, 0xfe, 
	0xff, 0x00, 0xf7, 0xdf, 0x9f, 0x80, 0x3c, 0x79, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xf7, 0x00, 0x70, 0xe3, 0x9c, 0x01, 0xc0, 
	0x38, 0x00, 0x1c, 0x03, 0x87, 0x78, 0x07, 0x00, 0xef, 0x80, 0xff, 0x9f, 0xff, 0x80, 0xf8, 0x7f, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3b, 0xe7, 0xf8, 0x7f, 0xe3, 0x9c, 0x01, 0xc0, 0x3f, 0x80, 0x1f, 0xfb, 0xff, 0x7f, 0x87, 0xf0, 
	0xe3, 0xc0, 0xff, 0x1f, 0xff, 0x80, 0xf0, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0xe7, 0xf8, 0x7f, 0xe3, 0x9c, 0x01, 0xc0, 
	0x3f, 0x80, 0x1f, 0xfb, 0xff, 0x7f, 0x87, 0xf0, 0xe3, 0xe0, 0xff, 0x9f, 0xff, 0x83, 0xe0, 0x7f, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x87, 0x00, 0x7f, 0xe3, 0x9c, 0x01, 0xc0, 0x38, 0x00, 0x00, 0x3b, 0xff, 0x78, 0x07, 0x00, 
	0xe1, 0xe0, 0xf7, 0xde, 0x6f, 0x83, 0xc0, 0x79, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x07, 0xff, 0x70, 0xef, 0xdf, 0xf9, 0xff, 
	0xbf, 0xf0, 0x1f, 0xfb, 0x80, 0x7f, 0xf7, 0xfe, 0xff, 0xe0, 0xf7, 0xde, 0x0f, 0x8f, 0x00, 0x79, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0x07, 0xff, 0x70, 0xef, 0xdf, 0xfd, 0xff, 0xbf, 0xf0, 0x1f, 0xfb, 0x80, 0x7f, 0xf7, 0xfe, 
	0xff, 0xe0, 0xf7, 0xde, 0x0f, 0x8f, 0x00, 0x79, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x07, 0xff, 0x70, 0xef, 0xdf, 0xfd, 0xff, 
	0xbf, 0xf0, 0x1f, 0xfb, 0x80, 0x7f, 0xf7, 0xfe, 0xff, 0xe0, 0xf7, 0xde, 0x0f, 0xbc, 0x00, 0x79, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xf7, 0xde, 0x0f, 0xbc, 0x00, 0x79, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 5184)
const int epd_bitmap_allArray_LEN = 9;
const unsigned char* epd_bitmap_allArray[9] = {
	epd_bitmap_BATTERY_H,
	epd_bitmap_COOLANTTEMP_H,
	epd_bitmap_ENGINELOAD_H,
	epd_bitmap_ENGINERPM_H,
	epd_bitmap_FUEL_RAIL_PRESSURE_H,
	epd_bitmap_INTAKEPRES_H,
	epd_bitmap_INTAKE_H,
	epd_bitmap_MAF,
	epd_bitmap_VEHICLESPEED_H
};


int numbers1[] = {  
    0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 39, 40,  
    38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 10, 10, 10, 10, 0,  
    0, 0  
};  

int numbers2[] = {  
    10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21,  
    20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 11, 12, 13, 14, 15, 10, 10, 10, 10,  
    0, 0  
}; 

int numbers3[] = {  
    10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 24, 24, 23,  
    22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 11, 12, 13, 10, 10, 10, 10,  
    0, 0  
};  



#include <SPI.h>
#include <TFT_eSPI.h> 
#include <XPT2046_Touchscreen.h>

TFT_eSPI tft = TFT_eSPI(); 

// Define screen height
#define SCREEN_HEIGHT 240  // Height of the screen in pixels

// Touchscreen pins
#define XPT2046_IRQ 36   // T_IRQ
#define XPT2046_MOSI 13  // T_DIN
#define XPT2046_MISO 12  // T_OUT
#define XPT2046_CLK 14   // T_CLK
#define XPT2046_CS 33    // T_CS

SPIClass touchscreenSPI = SPIClass(HSPI);
XPT2046_Touchscreen touchscreen(XPT2046_CS, XPT2046_IRQ);

int prev_rectWidth1 = 0;
int prev_rectWidth2 = 0;
int prev_rectWidth3 = 0;


const int graphWidth = 320;  
const int graphHeight = 66;  
const int barWidth = 1;     


int barHeights1[graphWidth];  
int barHeights2[graphWidth]; 


uint16_t buffer1[graphWidth * graphHeight]; 
uint16_t buffer2[graphWidth * graphHeight];  
int focusIndex = 1;


const int btn1 = 22; 


#define SHORT_PRESS_TIME 500 
#define LONG_PRESS_TIME  1000 


int lastState = HIGH; 
unsigned long pressedTime  = 0;
unsigned long releasedTime = 0;

int section1Mode = 1;
int section2Mode = 1;
int section3Mode = 0;

void setup() {
  Serial.begin(115200);

 
  touchscreenSPI.begin(XPT2046_CLK, XPT2046_MISO, XPT2046_MOSI, XPT2046_CS);
  touchscreen.begin(touchscreenSPI);
  touchscreen.setRotation(1);

  tft.init();
  tft.setRotation(1); 
  tft.fillScreen(TFT_BLACK); 


  InitializeGraph1();
  InitializeGraph2();
  pinMode(btn1, INPUT_PULLUP);
}

void loop() {

  for (int value = 0; value < 41; value += 1) {
    int currentState = digitalRead(btn1);

  
    if (lastState == HIGH && currentState == LOW) { 
      pressedTime = millis();
    } else if (lastState == LOW && currentState == HIGH) { 
      releasedTime = millis();

      long pressDuration = releasedTime - pressedTime;


      if (pressDuration < SHORT_PRESS_TIME) {
        focusIndex = (focusIndex + 1) % 3;
        Serial.println("Short press detected: Focus index changed");
      }


      if (pressDuration > LONG_PRESS_TIME) {
        section1Mode = (section1Mode + 1) % 2;
        tft.fillRect(0, 0, 320, 14, TFT_BLACK);

        section2Mode = (section2Mode + 1) % 2;
        tft.fillRect(0, 80, 320, 14, TFT_BLACK);
        Serial.println("Long press detected: Section modes toggled");
      }
    }


    lastState = currentState;


    if (touchscreen.tirqTouched() && touchscreen.touched()) {
      TS_Point p = touchscreen.getPoint();
      int touchY = map(p.x, 200, 3800, 1, SCREEN_HEIGHT);
      Serial.println(touchY);

  
      if (touchY >= 0 && touchY < 80) {
        focusIndex = 0;
      } else if (touchY >= 80 && touchY < 160) {
        focusIndex = 1;
      } else if (touchY >= 160 && touchY < 240) {
        focusIndex = 2;
      }

      Serial.print("Touch detected: Focus index changed to ");
      Serial.println(focusIndex);
    }


    if (section1Mode == 0) {
      drawBar(0, numbers2[value], 1, focusIndex == 0, 0, 45, 1);
    } else {
      drawGraph(0, numbers2[value], 5, barHeights1, buffer1, focusIndex == 0, 0, 70);
    }

    if (section2Mode == 0) {
      drawBar(80, numbers1[value], 1, focusIndex == 1, 0, 45, 2);
    } else {
      drawGraph(80, numbers1[value], 5, barHeights2, buffer2, focusIndex == 1, 0, 70);
    }

    drawBar(160, numbers1[value], 3, focusIndex == 2, 0, 45, 3);

    delay(50); 
  }
}

void drawBar(int y, int value, int header, bool focus, int max_value, int min_value, int section) {
  tft.drawBitmap(0, y, epd_bitmap_allArray[header], 320, 14, TFT_WHITE);

  int rectWidth = map(value, 0, 45, 0, 320);

  if (section == 1) {
    if (rectWidth != prev_rectWidth1) {
      tft.fillRect(0 + prev_rectWidth1, y + 14, 320 - prev_rectWidth1, 66, TFT_BLACK);
      tft.fillRect(0, y + 14, rectWidth, 66, TFT_WHITE);
      prev_rectWidth1 = rectWidth;
    }
  }

  if (section == 2) {
    if (rectWidth != prev_rectWidth2) {
      tft.fillRect(0 + prev_rectWidth2, y + 14, 320 - prev_rectWidth2, 66, TFT_BLACK);
      tft.fillRect(0, y + 14, rectWidth, 66, TFT_WHITE);
      prev_rectWidth2 = rectWidth;
    }
  }

    if (section == 3) {
    if (rectWidth != prev_rectWidth3) {
      tft.fillRect(0 + prev_rectWidth3, y + 14, 320 - prev_rectWidth3, 66, TFT_BLACK);
      tft.fillRect(0, y + 14, rectWidth, 66, TFT_WHITE);
      prev_rectWidth3 = rectWidth;
    }
  }

  tft.setTextColor(TFT_WHITE, TFT_BLACK); 
  tft.setTextSize(2); 

  tft.fillRect(289, y + 2, 50, 20, TFT_BLACK); 

  tft.setCursor(289, y + 2); 
  tft.print(value); 

  if (focus) {
    drawFocus(y);
  } else {
    tft.drawRect(0, y, 320, 80, TFT_BLACK);
  }
}

void drawGraph(int y, int value, int header, int barHeights[], uint16_t buffer[], bool focus, int max_value, int min_value) {
  tft.drawBitmap(0, y, epd_bitmap_allArray[header], 320, 14, TFT_WHITE);

  y = y + 14;

  for (int i = 0; i < graphWidth - 1; i++) {
    barHeights[i] = barHeights[i + 1];
  }

 
  int newBarHeight = 0; 
  if (value != 0) { 
    newBarHeight = map(value, min_value, max_value, 0, graphHeight);  
  }

  barHeights[graphWidth - 1] = newBarHeight;

  for (int i = 0; i < graphWidth * graphHeight; i++) {
    buffer[i] = TFT_BLACK;
  }


  for (int x = 0; x < graphWidth; x++) {
    int barHeight = barHeights[x];
    if (barHeight > 0) {
      for (int y = graphHeight - barHeight; y < graphHeight; y++) {
        buffer[y * graphWidth + x] = TFT_WHITE;  
      }
    }
  }

  
  tft.pushImage(0, y, graphWidth, graphHeight, buffer);

 
  tft.setTextColor(TFT_WHITE, TFT_BLACK); 
  tft.setTextSize(2); 

  
  tft.fillRect(289, y - 12, 50, 20, TFT_BLACK); 

  tft.setCursor(289, y - 12); 
  tft.print(value); 

  if (focus) {
    drawFocus(y - 14);
  } else {
    tft.drawRect(0, y - 14, 320, 80, TFT_BLACK);
  }
}

void drawFocus(int y) {
  tft.drawRect(0, y, 320, 80, TFT_ORANGE);
}

void InitializeGraph1() {
  for (int i = 0; i < graphWidth; i++) {
    barHeights1[i] = 0;
  }

  for (int i = 0; i < graphWidth * graphHeight; i++) {
    buffer1[i] = TFT_BLACK;
  }
}

void InitializeGraph2() {
  for (int i = 0; i < graphWidth; i++) {
    barHeights2[i] = 0;
  }

  for (int i = 0; i < graphWidth * graphHeight; i++) {
    buffer2[i] = TFT_BLACK;
  }
}